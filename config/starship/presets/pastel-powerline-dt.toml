
# Custom Commands See: https://www.adamdehaven.com/snippets/how-to-customize-your-shell-prompt-with-starship
# Fonts See: https://www.nerdfonts.com/#home

format = """
${custom.segment_symbol}\
$os\
${custom.sys_symbol}\
${custom.root_arrow1}\
${custom.user_arrow1}\
$username\
${custom.root_arrow2}\
${custom.user_arrow2}\
$directory\
[](fg:dir_bg bg:git_bg)\
$git_branch\
$git_status\
[](fg:git_bg bg:app_bg)\
$c\
$elixir\
$elm\
$golang\
$gradle\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
[](fg:app_bg bg:docker_bg)\
$docker_context\
[](fg:docker_bg bg:time_bg)\
$time\
[ ](fg:time_bg)\
$line_break\
$character\
"""

command_timeout = 2000

# Disable the blank line at the start of the prompt
# add_newline = false

# You can also replace your username with a neat symbol like   or disable this
# and use the os module below
[username]
show_always = true
style_user = "bg:hostc_user"
style_root = "bg:hostc_root"
format = '[ $user ]($style)'
disabled = false

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
style = "bg:#9A348E"
disabled = true      # Disabled by default

[directory]
style = "bg:dir_bg"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = " 󰈙 "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important 󰈙 " = " 󰈙 "

[c]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[docker_context]
symbol = " "
style = "bg:docker_bg"
format = '[ $symbol $context ]($style)'

[elixir]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[elm]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[git_branch]
symbol = ""
style = "bg:git_bg"
format = '[ $symbol $branch ]($style)'

[git_status]
style = "bg:git_bg"
modified = '!${count}'
untracked = '?${count}'
staged = '[++\($count\)]'
ahead = '⇡${count}'
diverged = '⇕⇡${ahead_count}⇣${behind_count}'
behind = '⇣${count}'
format = '[$all_status$ahead_behind ]($style)'

[golang]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[gradle]
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[haskell]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[java]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[julia]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[nodejs]
symbol = ""
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[nim]
symbol = "󰆥 "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[rust]
symbol = ""
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[scala]
symbol = " "
style = "bg:app_bg"
format = '[ $symbol ($version) ]($style)'

[time]
disabled = false
time_format = "%R"           # Hour:Minute Format
style = "bg:time_bg"
format = '[ $time ]($style)'


# Custom Modules
[custom.segment_symbol]
symbol = ""
style = "fg:hostc_user"
format = '[$symbol]($style)'
when = "true"

[custom.root_arrow1]
symbol = ""
style = "fg:hostc_user bg:hostc_root"
format = '[$symbol]($style)'
when = '[ "$EUID" = 0 ]'              # Show for root or admin

[custom.user_arrow1]
symbol = ""
style = "fg:hostc_user bg:dir_bg"
#format = '[$symbol]($style)'
format = '[](fg:hostc_user bg:dir_bg)[](fg:dir_bg bg:hostc_user)'
when = '[ "$EUID" != 0 ]'                                           # Show for NOT root or admin

[custom.user_arrow1b]
#symbol = ""
symbol = ""
style = "fg:hostc_user bg:dir_bg"
format = '[$symbol]($style)'
when = '[ "$EUID" != 0 ]'         # Show for NOT root or admin


[custom.root_arrow2]
symbol = ""
style = "fg:hostc_root bg:dir_bg"
format = '[$symbol]($style)'
when = '[ "$EUID" = 0 ]'          # Show for root or admin

[custom.user_arrow2]
symbol = ""
style = "fg:hostc_user bg:dir_bg"
format = '[$symbol]($style)'
when = '[ "$EUID" != 0 ]'         # Show for NOT root or admin

# For displaying the System I'm on
[custom.sys_symbol]
symbol = " "
style = "bg:hostc_user"
format = '[$symbol]($style)'
when = "true"
